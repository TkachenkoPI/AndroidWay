/* В классе есть приватный конструктор, который можно вызвать только внутри класса. 
Для хранения единственного объекта класса определена приватная статическая константа, 
которая создается с помощью приватного конструктра. И есть фабричный конструктор, который 
возвращает значение этой статической переменной

Например, в приложении одномоментно может быть залогинен только один пользователь.
*/

class User {
  String name = ""; // логин для входа в приложение
  bool isLogged = false; // залогинен ли пользователь
  static final User user = User._();

  User._();

  factory User.login(String name) {
    if (!user.isLogged) {
      // если пользователь не залогинен
      user.name = name; // устанавливаем логи
      user.isLogged = true; // указываем, что пользователь вошел в приложение
      print("Пользователь ${user.name} вошел в приложение");
    } else {
      // в фабричных конструкторах нельзя обращаться к this
      // print("С приложением уже работает ${this.name}");
      print("С приложением уже работает ${user.name}");
    }

    return user;
  }

  void info() {
    if (user.isLogged) print("Текущий пользователь ${user.name}");
  }

  // выход из приложения
  void logout() {
    print("${user.name} вышел из приложения");
    user.isLogged = false;
  }
}
